Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-demo-s3-events-source-s3-bucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3

  Bucket2:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-demo-s3-events-processed-s3-bucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - arn:aws:s3:::my-demo-s3-events-source-s3-bucket
                  - arn:aws:s3:::my-demo-s3-events-source-s3-bucket/*
                  - arn:aws:s3:::my-demo-s3-events-processed-s3-bucket
                  - arn:aws:s3:::my-demo-s3-events-processed-s3-bucket/*
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: arn:aws:logs:ap-south-1:588738614244:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - arn:aws:logs:ap-south-1:588738614244:log-group:/aws/lambda/s3-events-lambda-function:*