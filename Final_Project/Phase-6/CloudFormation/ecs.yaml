AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Fargate setup

Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id
  VPCId:
    Type: String
  ContainerImage:
    Type: String
  SecretArn:
    Type: String
  TargetGroupArn:
    Type: String

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: miniblog-cluster

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: miniblog-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      ContainerDefinitions:
        - Name: miniblog
          Image: !Ref ContainerImage
          PortMappings:
            - ContainerPort: 5000
          Secrets:
            - Name: DB_SECRET
              ValueFrom: !Ref SecretArn
          Environment:
            - Name: FLASK_ENV
              Value: production

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: TaskDefinition
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups: []
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroupArn
          ContainerName
